"""Edit column description on package table

Revision ID: 1ab128952b3e
Revises: fd889b7f94aa
Create Date: 2025-09-10 22:11:23.561674

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ab128952b3e'
down_revision: Union[str, Sequence[str], None] = 'fd889b7f94aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gallery_id'), table_name='gallery')
    op.drop_index(op.f('ix_gallery_name'), table_name='gallery')
    op.drop_table('gallery')
    op.drop_table('dive_centers')
    op.drop_table('best_selling')
    op.alter_column('packages', 'description',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('packages', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.create_table('best_selling',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item_type', postgresql.ENUM('COURSE', 'TRIP', name='itemtype'), autoincrement=False, nullable=False),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ranking_position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trip_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name=op.f('best_selling_course_id_fkey')),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], name=op.f('best_selling_trip_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('best_selling_pkey'))
    )
    op.create_table('dive_centers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('is_image_list', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hotel_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('coordinates', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('working_hours', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('dive_centers_pkey'))
    )
    op.create_table('gallery',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('gallery_pkey'))
    )
    op.create_index(op.f('ix_gallery_name'), 'gallery', ['name'], unique=False)
    op.create_index(op.f('ix_gallery_id'), 'gallery', ['id'], unique=False)
    # ### end Alembic commands ###
