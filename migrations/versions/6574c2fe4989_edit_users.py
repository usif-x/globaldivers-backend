"""edit users

Revision ID: 6574c2fe4989
Revises: f1cd0f9da738
Create Date: 2025-08-02 02:55:05.841719

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "6574c2fe4989"
down_revision: Union[str, Sequence[str], None] = "f1cd0f9da738"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "full_name",
        existing_type=mysql.VARCHAR(length=40),
        type_=sa.String(length=100),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=mysql.VARCHAR(length=100),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "password",
        existing_type=mysql.VARCHAR(length=100),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "role",
        existing_type=mysql.VARCHAR(length=40),
        type_=sa.String(length=20),
        existing_nullable=False,
        existing_server_default=sa.text("'user'"),
    )
    op.alter_column(
        "users",
        "is_active",
        existing_type=mysql.VARCHAR(length=40),
        type_=sa.Boolean(),
        existing_nullable=False,
        existing_server_default=sa.text("'true'"),
    )
    op.alter_column(
        "users",
        "is_blocked",
        existing_type=mysql.VARCHAR(length=40),
        type_=sa.Boolean(),
        existing_nullable=False,
        existing_server_default=sa.text("'false'"),
    )
    op.alter_column(
        "users",
        "last_login",
        existing_type=mysql.VARCHAR(length=50),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.drop_index("email", table_name="users")
    op.drop_index("id", table_name="users")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_index("id", "users", ["id"], unique=True)
    op.create_index("email", "users", ["email"], unique=True)
    op.alter_column(
        "users",
        "last_login",
        existing_type=sa.DateTime(timezone=True),
        type_=mysql.VARCHAR(length=50),
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "is_blocked",
        existing_type=sa.Boolean(),
        type_=mysql.VARCHAR(length=40),
        existing_nullable=False,
        existing_server_default=sa.text("'false'"),
    )
    op.alter_column(
        "users",
        "is_active",
        existing_type=sa.Boolean(),
        type_=mysql.VARCHAR(length=40),
        existing_nullable=False,
        existing_server_default=sa.text("'true'"),
    )
    op.alter_column(
        "users",
        "role",
        existing_type=sa.String(length=20),
        type_=mysql.VARCHAR(length=40),
        existing_nullable=False,
        existing_server_default=sa.text("'user'"),
    )
    op.alter_column(
        "users",
        "password",
        existing_type=sa.String(length=255),
        type_=mysql.VARCHAR(length=100),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.String(length=255),
        type_=mysql.VARCHAR(length=100),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "full_name",
        existing_type=sa.String(length=100),
        type_=mysql.VARCHAR(length=40),
        existing_nullable=False,
    )
    op.create_table(
        "galleries",
        sa.Column(
            "id", mysql.INTEGER(display_width=11), autoincrement=True, nullable=False
        ),
        sa.Column("name", mysql.VARCHAR(length=100), nullable=False),
        sa.Column("description", mysql.VARCHAR(length=500), nullable=True),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_general_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "images",
        sa.Column(
            "id", mysql.INTEGER(display_width=11), autoincrement=True, nullable=False
        ),
        sa.Column("name", mysql.VARCHAR(length=100), nullable=False),
        sa.Column("url", mysql.VARCHAR(length=100), nullable=False),
        sa.Column(
            "gallery_id",
            mysql.INTEGER(display_width=11),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(["gallery_id"], ["galleries.id"], name="images_ibfk_1"),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_general_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "invoices",
        sa.Column(
            "id", mysql.INTEGER(display_width=11), autoincrement=True, nullable=False
        ),
        sa.Column(
            "user_id",
            mysql.INTEGER(display_width=11),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("amount", mysql.FLOAT(), nullable=False),
        sa.Column(
            "created_at",
            mysql.DATETIME(),
            server_default=sa.text("current_timestamp()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            mysql.DATETIME(),
            server_default=sa.text("current_timestamp()"),
            nullable=False,
        ),
        sa.Column("status", mysql.VARCHAR(length=50), nullable=False),
        sa.Column("pay_url", mysql.VARCHAR(length=255), nullable=False),
        sa.Column("pay_method", mysql.VARCHAR(length=100), nullable=False),
        sa.Column("invoice_for", mysql.VARCHAR(length=100), nullable=False),
        sa.Column(
            "items",
            mysql.LONGTEXT(charset="utf8mb4", collation="utf8mb4_bin"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="invoices_ibfk_1"),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_general_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    # ### end Alembic commands ###
