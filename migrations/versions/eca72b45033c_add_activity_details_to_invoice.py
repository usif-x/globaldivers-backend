"""add activity_details to invoice

Revision ID: eca72b45033c
Revises: 1ab128952b3e
Create Date: 2025-10-24 16:38:40.925906

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "eca72b45033c"
down_revision: Union[str, Sequence[str], None] = "1ab128952b3e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "invoices",
        sa.Column(
            "activity_details", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("invoices", "activity_details")
    op.create_table(
        "gallery",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("url", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="gallery_pkey"),
    )
    op.create_index("ix_gallery_name", "gallery", ["name"], unique=False)
    op.create_index("ix_gallery_id", "gallery", ["id"], unique=False)
    op.create_table(
        "dive_centers",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "images",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "is_image_list",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("phone", sa.VARCHAR(length=30), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column(
            "location", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column(
            "hotel_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "coordinates",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "working_hours",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="dive_centers_pkey"),
    )
    op.create_table(
        "best_selling",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "item_type",
            postgresql.ENUM("COURSE", "TRIP", name="itemtype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("item_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "ranking_position", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("course_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("trip_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["course_id"], ["courses.id"], name="best_selling_course_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["trip_id"], ["trips.id"], name="best_selling_trip_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="best_selling_pkey"),
    )
    # ### end Alembic commands ###
