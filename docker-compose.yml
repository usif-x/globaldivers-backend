version: "3.8"

# Quick Start:
# 1. Copy .env.example to .env and configure your environment variables
# 2. Run: docker-compose up -d
# 3. The application will be available at http://localhost:8000
# 4. API documentation at http://localhost:8000/docs
#
# Required environment variables in .env file:
# - DB_HOST: Your external PostgreSQL host (e.g., host.docker.internal)
# - DB_NAME, DB_USERNAME, DB_PASSWORD: PostgreSQL credentials
# - JWT_SECRET_KEY: At least 32 characters
# - ADMIN_EMAIL, ADMIN_USERNAME, ADMIN_PASSWORD: Admin account
# - EASYKASH_PRIVATE_KEY, EASYKASH_SECRET_KEY: Payment gateway
# - CORS_ORIGIN: Your frontend URL (e.g., http://localhost:3000)

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./storage:/app/storage
    environment:
      - DB_HOST=host.docker.internal # Use host.docker.internal to connect to a PostgreSQL instance running on your host machine
      - DB_REDIS_URI=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
